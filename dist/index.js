"use strict";var q=Object.create;var l=Object.defineProperty;var R=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames,S=Object.getOwnPropertySymbols,E=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty,U=Object.prototype.propertyIsEnumerable;var z=(t,n,e)=>n in t?l(t,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[n]=e,$=(t,n)=>{for(var e in n||(n={}))P.call(n,e)&&z(t,e,n[e]);if(S)for(var e of S(n))U.call(n,e)&&z(t,e,n[e]);return t};var B=(t,n)=>{for(var e in n)l(t,e,{get:n[e],enumerable:!0})},y=(t,n,e,s)=>{if(n&&typeof n=="object"||typeof n=="function")for(let r of k(n))!P.call(t,r)&&r!==e&&l(t,r,{get:()=>n[r],enumerable:!(s=R(n,r))||s.enumerable});return t};var G=(t,n,e)=>(e=t!=null?q(E(t)):{},y(n||!t||!t.__esModule?l(e,"default",{value:t,enumerable:!0}):e,t)),H=t=>y(l({},"__esModule",{value:!0}),t);var K={};B(K,{default:()=>J});module.exports=H(K);var W=G(require("postcss-value-parser"));var x=(t={})=>{let n=$({warnings:!1,minWidth:768,maxWidth:1536,baseFontSize:16},t);return{postcssPlugin:"fluid-clamp",Declaration(e,{result:s}){let r=(0,W.default)(e.value),f=!1;r.walk(d=>{if(d.type!=="function"||d.value!=="clamp")return;let o=d.nodes.filter(a=>a.type!=="div");if(o.length!==3)return;let F=o.findIndex(a=>a.type==="function"&&a.value==="@fluid");if(F===-1)return;let m=o[F],i=[],w=!1;if(m.nodes.forEach(a=>{if(a.type==="word"){let h=parseFloat(a.value);!isNaN(h)&&h.toString()===a.value?i.push(h):w=!0}}),w){n.warnings&&e.warn(s,"@fluid function contains invalid numerical arguments.");return}if(![0,2,3].includes(i.length)){n.warnings&&e.warn(s,`@fluid function requires either 0, 2, or 3 numerical arguments, but received ${i.length}.`);return}if((i.length===2||i.length===3)&&i.some(a=>typeof a!="number"||isNaN(a))){n.warnings&&e.warn(s,"@fluid function contains invalid numerical arguments.");return}let{minWidth:u,maxWidth:c,baseFontSize:p}=n;i.length===2?(u=i[0],c=i[1]):i.length===3&&(u=i[0],c=i[1],p=i[2]);let D=o[0],A=o[2],g=V(D.value),v=V(A.value);if(g===null||v===null)return;let C=v-g,N=c-u;if(N===0){let a=`${p}px`;Object.assign(m,{type:"word",value:a,nodes:void 0}),n.warnings&&e.warn(s,`minScreen (${u}px) and maxScreen (${c}px) are equal. Using minSize (${p}px).`),f=!0;return}let b=C/N,O=g-b*u,I=parseFloat((b*100).toFixed(5)),j=`calc(${parseFloat(O.toFixed(5))}px + ${I}vw)`;Object.assign(m,{type:"word",value:j,nodes:void 0}),f=!0}),f&&(e.value=r.toString())}}};function V(t){let n=/^([\d.]+)(px|rem|em)$/,e=t.trim().match(n);if(!e)return null;let s=parseFloat(e[1]);switch(e[2]){case"px":return s;case"rem":case"em":return s*16;default:return null}}x.postcss=!0;x.postcssPlugin="fluid-clamp";var J=x;
//# sourceMappingURL=index.js.map